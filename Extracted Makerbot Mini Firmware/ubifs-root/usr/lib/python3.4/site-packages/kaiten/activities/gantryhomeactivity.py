"""This activity handles gantry (XY) homing.

It parses a sequence file similar to start.json and
end.json, since X and Y homing procedure varies
considerably bot to bot"""

import kaiten.constants
import kaiten.util
from kaiten.activities import XYHomeActivity

class GantryHomeActivity(XYHomeActivity):
    def __init__(self, machine_manager, pymach, config,
        environment, **kwargs):
        super().__init__(machine_manager, pymach, config, None)
        self._environment = environment

    def run(self):
        yield from self._pymach.toggle_acceleration_lookahead(False)
        yield from kaiten.util.process_sequence(kaiten.constants.home_script,
            self._config,
            self._environment,
            self._sequence_handler)

    def _sequence_handler(self, func_name, *args, **kwargs):
        # TODO: better format for home calls
        if func_name == "home":
            self._log.info("Homing {}, {}".format(args, kwargs))
            yield from self._home_axis(args[0][0], **kwargs)
        elif func_name == "safe_move_z":
            clearance = args[0]
            speed = args[1]
            cur_pos = yield from self._pymach.get_axes_position()
            desired_position = cur_pos[2] + clearance
            if desired_position < self._config["axis_length"]["z"]:
                yield from self._ensure_move_axis(2, clearance, speed, True)
        else:
            yield from getattr(self._pymach, func_name)(*args, **kwargs)
