import logging

import kaiten.enum
import kaiten.error

from kaiten.processes.process import Process

class ManualLevelingProcess(Process):
    def __init__(self, machine_manager, pymach, config):
        super(ManualLevelingProcess, self).__init__(machine_manager, pymach, config)
        self._config = config
        self._manual_steps = kaiten.enum.enum(
            "manual_steps",
            "traveling",
            "leveling_front",
            "leveling_side",
            "finishing_level",
        )
        self._requests = kaiten.enum.enum(
            "kaiten_requests",
            "tighten_knobs",
            "check_front",
            "check_side",
            "check_level",
        )
        self._movement_speed = 20
        self._z_backoff = 15
        self.ignore_all_toolhead_errors()

    def _do_run(self):
        self._log.info("Beginning leveling process")
        self._step_change(self._manual_steps.traveling)
        # Set Z and extruder to 0
        yield from self._pymach.set_position(3, 0)
        yield from self._create_and_run_activity(
            kaiten.activities.GantryHomeActivity,
            self._environment)
        while True:
            yield from self._do_manual_leveling()
            try:
                yield from self._lcd_request_user_input(self._requests.check_level)
            except kaiten.error.UserRequestException:
                self._log.info("User request additional leveling")
            else:
                self._log.info("Done leveling")
                break
        yield from self._pymach.move_axis(2, self._z_backoff, self._movement_speed)

    def _do_manual_leveling(self):
        """
        The meat of the manual leveling process is done here, so the user has
        the option to retry leveling during the final check.
        """
        # Ensure at the origin
        self._step_change(self._manual_steps.traveling)
        positions = self._config["leveling"]["positions"]
        cur_pos = yield from self._pymach.get_axes_position()
        yield from self._pymach.move([0, 0, cur_pos[2], 0], self._movement_speed)
        yield from self._create_and_run_activity(
            kaiten.activities.ZHomeActivity,
            do_fine_home=False)
        yield from self._pymach.move_axis(2, self._z_backoff, self._movement_speed)
        yield from self._lcd_request_user_input(self._requests.tighten_knobs)
        self._step_change(self._manual_steps.leveling_front)
        front_knob_x = positions["front"]["x"]
        front_knob_y = positions["front"]["y"]
        yield from self._pymach.move([front_knob_x, front_knob_y, self._z_backoff, 0],
            self._movement_speed)
        yield from self._pymach.move_axis(2, 0, self._movement_speed)
        yield from self._lcd_request_user_input(self._requests.check_front)
        self._step_change(self._manual_steps.leveling_side)
        yield from self._pymach.move_axis(2, self._z_backoff, self._movement_speed)
        side_knob_x = positions["side"]["x"]
        side_knob_y = positions["side"]["y"]
        yield from self._pymach.move([side_knob_x, side_knob_y, self._z_backoff, 0],
            self._movement_speed)
        yield from self._pymach.move_axis(2, 0, self._movement_speed)
        yield from self._lcd_request_user_input(self._requests.check_side)
        self._step_change(self._manual_steps.finishing_level)
        yield from self._pymach.move_axis(2, self._z_backoff, self._movement_speed)
        yield from self._pymach.move([0, 0, self._z_backoff, 0], self._movement_speed)
        yield from self._pymach.move_axis(2, 0, self._movement_speed)
