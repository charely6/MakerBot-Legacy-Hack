"""A process for homing the machine.

This exists mostly (only?) for homing invoked via the host driver.
"""


import kaiten.activities
import kaiten.error

from kaiten.processes.process import Process

class HomingProcess(Process):
    def __init__(self, machine_manager, pymach, axes, config):
        super().__init__(machine_manager, pymach, config)
        self._axes = [a.upper() for a in axes]
        self.ignorable_toolhead_errors.add(
            kaiten.error.no_filament)
        self.ignorable_toolhead_errors.add(
            kaiten.error.filament_slip)

    def _do_run(self):
        for axis in self._axes:
            if axis.upper() == 'Z':
                yield from self._create_and_run_activity(
                    kaiten.activities.ZHomeActivity)
            elif axis.upper() == 'GANTRY':
                yield from self._create_and_run_activity(
                    kaiten.activities.GantryHomeActivity,
                    self._environment)
            elif axis.upper() in ['X', 'Y']:
                yield from self._create_and_run_activity(
                    kaiten.activities.XYHomeActivity,
                    axis)
            else:
                self._log.error("Invalid axis key: {0}".format(axis))
                raise KeyError

