import logging
import tempfile
import datetime

import kaiten.error

from kaiten.processes.process import Process

class YonkersUploadProcess(Process):
    def __init__(self, machine_manager, pymach, filepath, uid, index, force, id=None):
        super(YonkersUploadProcess, self).__init__(machine_manager, pymach,
                                                   machine_manager._config)
        if None is not id:
            self._id = id
        else:
            self._id = pymach.get_tool_id(index)
        self._data_mapping = {"ID": '0x'+hex(self._id)[2:].zfill(2),
                              "UID": '0x'+hex(uid)[2:].zfill(8)}
        self._log.info("Using data mapping {0} with uid {1}"\
                       .format(self._data_mapping, uid))
        self._mappath = filepath
        self._force = force
        self._uid = uid
        self.ignore_all_toolhead_errors()
        self._index = index

    def _do_run(self):
        from yonkers_tools import yonkers_tools
        try:
            data = yonkers_tools.yonkers_load_file(self._mappath,
                                                   self._id,
                                                   self._force)
        except yonkers_tools.UnsupportedVersionException:
            yield kaiten.error.unsupported_eeprom_version
        hex_data = yonkers_tools.yonkers_generate_intel_hex(data,
                                                            self._uid,
                                                            self._data_mapping)
        self._log.info('generated hex file \n {0}'.format(hex_data))
        with tempfile.NamedTemporaryFile(suffix='.hex', delete=False) as outfile:
            outfile.write(bytes(hex_data, 'UTF-8'))

        ok = False
        yield from self._pymach.program_yonkers(bytes(outfile.name, 'UTF-8'),
                                                self._index)

        for task in self._await_eeprom_transaction_finished(15, self._uid):
            if task == kaiten.error.eeprom_update_failed:
                self._log.error("Tool EEPROM update failed!")
            elif task == kaiten.error.ok:
                ok = True
            yield kaiten.error.not_ready

        if not ok or not bool(self._pymach.is_tool_connected(0)):
            yield kaiten.error.eeprom_update_failed
